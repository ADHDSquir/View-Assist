alias: ASSIST - Sentences Media
description: ""
trigger:
  - platform: conversation
    command:
      - broadcast {name}
    id: broadcast
  - platform: conversation
    command:
      - Play big one oh two [point one]
      - play big102
      - play kybg
      - Play Big 102
      - Play Big 1021
    id: big102
    enabled: true
  - platform: conversation
    command: stop music
    id: stopmusic
  - platform: conversation
    command:
      - play {song}
    id: song
    enabled: true
  - platform: conversation
    command:
      - mute
    id: mute
  - platform: conversation
    command:
      - unmute
    id: unmute
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - broadcast
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - set_conversation_response: ""
            enabled: true
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              message: "{{ trigger.slots.name }}"
            enabled: true
          - service: browser_mod.navigate
            metadata: {}
            data:
              path: /dashboard-viewassist/info
            target:
              device_id:
                - ThinksmartLR
                - TabletMaster
                - Tabletfullkiosk
          - repeat:
              sequence:
                - service: python_script.set_state
                  data:
                    title: Annoucement
                    entity_id: "{{ repeat.item }}"
                - service: python_script.set_state
                  data:
                    entity_id: "{{ repeat.item }}"
                    message: "{{ trigger.slots.name }}"
                - service: python_script.set_state
                  data:
                    entity_id: "{{ repeat.item }}"
                    message_font_size: 4vw
              for_each: "{{ state_attr('group.assist_satellites', 'entity_id')| list }}"
          - service: chime_tts.say
            target:
              entity_id: group.assist_mediaplayerstest
            data:
              chime_path: www/viewassist/broadcast.mp3
              tts_playback_speed: 100
              volume_level: 1
              message: "{{ trigger.slots.name }}"
              tts_platform: google_translate
      - conditions:
          - condition: trigger
            id:
              - mute
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - service: media_player.volume_mute
            metadata: {}
            data:
              is_volume_muted: true
            target:
              entity_id: "{{ target_mediaplayer_device }}"
          - service: browser_mod.navigate
            metadata: {}
            data:
              path: /dashboard-viewassist/volume
            target:
              device_id: "{{ target_display_device }}"
      - conditions:
          - condition: trigger
            id:
              - unmute
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - service: media_player.volume_mute
            metadata: {}
            data:
              is_volume_muted: false
            target:
              entity_id: "{{ target_mediaplayer_device }}"
      - conditions:
          - condition: trigger
            id:
              - stopmusic
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              mode: normal
            enabled: true
          - service: media_player.media_stop
            target:
              entity_id:
                - "{{ target_mediaplayer_device }}"
            data: {}
            enabled: true
          - if:
              - condition: template
                value_template: >-
                  {% if states (device_entities(target_display_device)|first) ==
                  '/dashboard-viewassist/music'%}True{% else %}False{%endif%}
            then:
              - service: browser_mod.navigate
                metadata: {}
                data:
                  path: /dashboard-viewassist/clock
                target:
                  device_id: "{{ target_display_device }}"
      - conditions:
          - condition: trigger
            id:
              - time
            enabled: true
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              assist_satellite_device: >-
                {{ expand('group.assist_satellites') |
                selectattr('attributes.mic_device', 'eq',
                states('sensor.assist_last_called'))
                |map(attribute='entity_id')|list|first}} 
          - set_conversation_response: ""
          - service: mass.play_media
            target:
              entity_id: media_player.thinksmart_lr_2
            data:
              media_id: tunein://radio/s34824--aac
          - service: python_script.set_state
            data:
              entity_id: sensor.assistsat_viewlr
              image: https://cdn-profiles.tunein.com/s34824/images/logod.png
          - service: python_script.set_state
            data:
              entity_id: sensor.assistsat_viewlr
              mode: music
          - service: browser_mod.navigate
            data:
              path: /dashboard-viewassist/music
            target:
              device_id: "{{target_display_device}}"
      - conditions:
          - condition: trigger
            id:
              - big102
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - set_conversation_response: ""
            enabled: true
          - service: mass.play_media
            target:
              entity_id: media_player.thinksmart_lr_2
            data:
              media_id: tunein://radio/s34824--aac
            enabled: true
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              image: https://cdn-profiles.tunein.com/s34824/images/logod.png
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              mode: music
          - service: browser_mod.navigate
            data:
              path: /dashboard-viewassist/music
            target:
              device_id: "{{target_display_device}}"
      - conditions:
          - condition: trigger
            id:
              - song
        sequence:
          - variables:
              target_display_device: "{{states('input_text.assist_target_display_device')}}"
              target_satellite_device: "{{states('input_text.assist_target_satellite_device')}}"
              target_mediaplayer_device: "{{states('input_text.assist_target_mediaplayer_device')}}"
          - set_conversation_response: ""
            enabled: true
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              mode: music
          - service: python_script.set_state
            data:
              entity_id: "{{ target_satellite_device }}"
              message_font_size: 4vw
          - service: browser_mod.navigate
            data:
              path: /dashboard-viewassist/music
            target:
              device_id: "{{ target_display_device }}"
          - service: mass.search
            metadata: {}
            data:
              limit: 1
              media_type:
                - track
              name: "{{ trigger.slots.song }}"
            response_variable: song
          - service: mass.play_media
            metadata: {}
            data:
              media_id: "{{ song.tracks[0].uri }}"
              enqueue: play
            target:
              entity_id: "{{ target_mediaplayer_device }}_2"
mode: single
