blueprint:
  name: VIEWASSIST - How's the Weather?
  description: Ask "How's the Weather?" and ViewAssist will respond with the weather and show the weather view.
  domain: automation
  input:
    dashboard:
      name: Dashboard Weather view
      description: The View Assist dashboard view to use for weather
      default: "dashboard-viewassist/weather"
    group_entity: 
      name: Group Entity
      description: The group entity that holds the list of ViewAssist 
      selector:
        entity:
          filter:
            - domain: group
      default: "group.assist_satellites"
    weather_entity: 
      name: Weather Entity
      description: The entity that provides weather information.
      selector:
        entity:
          filter:
            - domain: weather
      default: "weather.home"
    command_prompt:
      name: Command Text
      description: The phrase you want to use to trigger the automation
      default: "How's the weather"
    
# Main automation configuration
alias: VIEWASSIST - How's the weather
description: "Find out what the weather is"
trigger:
  - platform: conversation
    command: !input command_prompt
variables:
  group_entity: !input group_entity
  weather_entity: !input weather_entity
  dashboard: !input dashboard
condition: []
action:
  - variables:
      target_satellite_device: |-
        {% for sat in expand('group_entity') %}
          {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
    enabled: true
  - set_conversation_response: >-
      Its {{ state_attr(weather_entity, 'temperature') }} degrees and
      {{states.weather_entity.state}}
    enabled: true
  - if:
      - condition: template
        value_template: "{% if target_display_device != None %}true{% else %}false{% endif %}"
    then:
      - service: browser_mod.navigate
        data:
          path: "{{ dashboard }}"
        target:
          device_id: "{{ target_display_device }}"
    enabled: true
mode: single
