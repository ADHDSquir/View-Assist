blueprint:
  name: View Assist - Control display template New
  description: This is used as a base for setting up display control on a View Assist Satellite (View Assist control v 1.0.0)
  domain: automation
  input:
    satellite:
      name: Satellite
      description: The View Assist device entity to control
      selector:
        entity:
          filter:
            - domain: sensor      
      default: "sensor.viewassist-living_room"
    timer:
      name: Timer
      description: The associated timer device entity for the satellite
      selector:
        entity:
          filter:
            - domain: timer      
      default: "timer.viewassist-living_room"
    display:
      name: Display Device
      description: The browsermod display device used by View Assist
      selector:
        entity:
          filter:
            - domain: sensor       
      default: "sensor.browsermod-livingroom_browser_path"
    dashboard:
      name: Dashboard
      description: The base dashboard for View Assist
      default: "/dashboard-viewassist/"
    home:
      name: Default Home screen
      description: The screen to return to after timeout
      default: "/dashboard-viewassist/clock"
    micunmute:
      name: Unmute Mic
      description: Unmute microphone on HA start/restart.  Helpful for Stream Assist devices
      selector:
        boolean:
      default: true
    micdevice:
      name: Mic device
      description: The microphone entity to unmute on HA start/restart.
      default: "sensor.viewassist_living_room_mic"  

trigger:
  - platform: state
    entity_id:
      - !input display
    id: ModeControl
  - platform: state
    entity_id:
      - !input satellite
    id: ModeControl
    attribute: mode
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input timer
    id: timerend
  - platform: state
    entity_id:
      - !input satellite
    id: Cycle
    attribute: mode
    to: cycle
  - platform: homeassistant
    event: start
    id: startup
variables:
  satellite: !input satellite
  dashboard: !input dashboard
  display: !input display
  home: !input home
  micunmute: !input micunmute
  micdevice: !input micdevice

action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - ModeControl
        sequence:
          - service: timer.start
            data:
              duration: >-
                {{states[satellite].attributes.view_timeout}}
            target:
              entity_id: !input timer
      - conditions:
          - condition: trigger
            id:
              - timerend
        sequence:
          - if:
              - condition: state
                entity_id: !input satellite
                state: normal
                attribute: mode
                enabled: true
            then:
              - service: browser_mod.navigate
                data:
                  path: "{{home}}"
                target:
                  device_id: "{{device_id(display)}}"
          - if:
              - condition: state
                entity_id: !input satellite
                state: music
                attribute: mode
                enabled: true
            then:
              - service: browser_mod.navigate
                data:
                  path: "{{dashboard}}/music"
                target:
                  device_id: "{{device_id(display)}}"
      - conditions:
          - condition: trigger
            id:
              - Cycle
        sequence:
          - repeat:
              while:
                - condition: state
                  entity_id: !input satellite
                  state: cycle
                  attribute: mode
              sequence:
                - repeat:
                    for_each: >-
                      {{ state_attr (satellite,'cycle_view')}}
                    sequence:
                      - if:
                          - condition: state
                            entity_id: !input satellite
                            state: cycle
                            attribute: mode
                        then:
                          - service: browser_mod.navigate
                            data:
                              path: "{{dashboard}}/{{repeat.item}}"
                            target:
                              device_id: "{{device_id(display)}}"
                      - if:
                          - condition: state
                            entity_id: !input satellite
                            state: cycle
                            attribute: mode
                        then:
                          - wait_for_trigger:
                              platform: event
                              event_type: timer.finished
                              event_data:
                                entity_id: !input timer
      - conditions:
          - condition: trigger
            id:
              - startup
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input micdevice                              
mode: parallel
