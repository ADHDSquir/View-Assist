alias: ASSIST - Set mode to (various)
description: ""
trigger:
  - platform: conversation
    command:
      - set mode to {mode}
      - turn on {mode} mode
  - platform: conversation
    command: Turn off do not disturb mode
    id: dndoff
condition: []
action:
  - if:
      - condition: template
        value_template: >-
          {{ trigger.slots.mode in ['normal', 'night', 'hold', 'cycle', 'do not
          disturb'] }}
    then:
      - set_conversation_response: Setting mode to {{ trigger.slots.mode }}
      - variables:
          target_satellite_device: |-
            {% for sat in expand('group.viewassist_satellites') %}
              {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
                {{ sat.entity_id }}
              {% endif %}
            {% endfor %}
          target_display_device: >-
            {{ device_id(state_attr(target_satellite_device, 'display_device'))
            }}
          target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
        enabled: true
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ trigger.slots.mode in ['normal', 'night', 'hold', 'cycle']
                  }}
            sequence:
              - service: python_script.set_state
                data:
                  entity_id: " {{ target_satellite_device }} "
                  mode: "{{ trigger.slots.mode }}"
          - conditions:
              - condition: template
                value_template: "{{ trigger.slots.mode in ['do not disturb'] }}"
            sequence:
              - service: python_script.set_state
                data:
                  entity_id: " {{ target_satellite_device }} "
                  do_not_disturb: true
    else:
      - set_conversation_response: "Sorry.  {{ trigger.slots.mode }} is not a valid mode. "
  - choose:
      - conditions:
          - condition: trigger
            id:
              - dndoff
        sequence:
          - variables:
              target_satellite_device: |-
                {% for sat in expand('group.viewassist_satellites') %}
                  {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
                    {{ sat.entity_id }}
                  {% endif %}
                {% endfor %}
              target_display_device: >-
                {{ device_id(state_attr(target_satellite_device,
                'display_device')) }}
              target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
            enabled: true
          - service: python_script.set_state
            data:
              entity_id: " {{ target_satellite_device }} "
              do_not_disturb: false
          - set_conversation_response: Do not disturb mode is now off
mode: single
